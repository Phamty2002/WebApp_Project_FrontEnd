{"ast":null,"code":"import React,{useState}from'react';function SignUp(){const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[email,setEmail]=useState('');const[error,setError]=useState('');const[isModalOpen,setIsModalOpen]=useState(false);async function handleSignUp(event){event.preventDefault();try{const response=await fetch('/api/signup/signup',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password,email})});if(response.ok){// Handle successful sign-up here, e.g., redirect to a new page\nwindow.location.href='/sign-in';// Redirect to the home page after sign-up\n}else{// Handle sign-up failure, show an error message\nconst errorData=await response.json();setError(errorData.message);console.error('Sign Up failed');}}catch(error){// Handle network errors, request failures, etc.\nsetError('An error occurred');console.error('An error occurred',error);}}// Function to open the modal\nconst openModal=()=>{setIsModalOpen(true);};// Function to close the modal\nconst closeModal=()=>{setIsModalOpen(false);};return/*#__PURE__*/React.createElement(\"div\",{className:\"signup-container\"},/*#__PURE__*/React.createElement(\"form\",{className:\"signup-form\",onSubmit:handleSignUp},/*#__PURE__*/React.createElement(\"h2\",null,\"Sign Up\"),error&&/*#__PURE__*/React.createElement(\"div\",{className:\"error\"},error),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"username\"},\"Username\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"username\",name:\"username\",required:true,value:username,onChange:e=>setUsername(e.target.value)})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",id:\"password\",name:\"password\",required:true,value:password,onChange:e=>setPassword(e.target.value)})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",id:\"email\",name:\"email\",required:true,value:email,onChange:e=>setEmail(e.target.value)})),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",onClick:openModal},\"Sign Up\"),/*#__PURE__*/React.createElement(\"p\",{className:\"login-link\"},\"Already have an account ? \",/*#__PURE__*/React.createElement(\"a\",{href:\"/sign-in\"},\"Log In\"))),isModalOpen&&/*#__PURE__*/React.createElement(\"div\",{className:\"modal\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},/*#__PURE__*/React.createElement(\"span\",{className:\"close\",onClick:closeModal},\"\\xD7\"),/*#__PURE__*/React.createElement(\"h2\",null,\"Sign Up Successful\"),/*#__PURE__*/React.createElement(\"p\",null,\"Your sign-up was successful. You can now log in.\"))));}export default SignUp;","map":{"version":3,"names":["React","useState","SignUp","username","setUsername","password","setPassword","email","setEmail","error","setError","isModalOpen","setIsModalOpen","handleSignUp","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","window","location","href","errorData","json","message","console","openModal","closeModal","createElement","className","onSubmit","htmlFor","type","id","name","required","value","onChange","e","target","onClick"],"sources":["/Users/typham/Documents/GitHub/WebApp_Project_FrontEnd/src/components/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\n\n\nfunction SignUp() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n\n  async function handleSignUp(event) {\n    event.preventDefault();\n\n    try {\n      const response = await fetch('/api/signup/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password, email }),\n      });\n\n      if (response.ok) {\n        // Handle successful sign-up here, e.g., redirect to a new page\n        window.location.href = '/sign-in'; // Redirect to the home page after sign-up\n      } else {\n        // Handle sign-up failure, show an error message\n        const errorData = await response.json();\n        setError(errorData.message);\n        console.error('Sign Up failed');\n      }\n    } catch (error) {\n      // Handle network errors, request failures, etc.\n      setError('An error occurred');\n      console.error('An error occurred', error);\n    }\n  }\n\n  // Function to open the modal\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  // Function to close the modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <form className=\"signup-form\" onSubmit={handleSignUp}>\n        <h2>Sign Up</h2>\n        {error && <div className=\"error\">{error}</div>}\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            required\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\" onClick={openModal}>\n          Sign Up\n        </button>\n        <p className=\"login-link\">\n          Already have an account ? <a href=\"/sign-in\">Log In</a>\n        </p>\n      </form>\n\n      {/* Modal */}\n      {isModalOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <span className=\"close\" onClick={closeModal}>\n              &times;\n            </span>\n            <h2>Sign Up Successful</h2>\n            <p>Your sign-up was successful. You can now log in.</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SignUp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}